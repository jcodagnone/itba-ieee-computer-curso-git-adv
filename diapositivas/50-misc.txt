â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ ðŸ¡† git show,  git rebase  interactivo                                         â”‚
â”‚                                                                              â”‚
â”‚ git show   - Show various types of objects                                   â”‚
â”‚ git log    - Show commit logs                                                â”‚
â”‚   --pretty[=<format>], --format=<format>                                     â”‚
â”‚       Pretty-print the contents of the commit logs in a given format, where  â”‚
â”‚       <format> can be one of oneline, short, medium, full, fuller, reference,â”‚
â”‚       email, raw,                                                            â”‚
â”‚ git stash  - Stash the changes in a dirty working directory away             â”‚
â”‚ git reset  - Reset current HEAD to the specified state                       â”‚
â”‚ git commit - Record changes to the repository                                â”‚
â”‚ git reflog - Manage reflog information                                       â”‚
â”‚ git rebase - Reapply commits on top of another base tip                      â”‚
â”‚ git merge  - Join two or more development histories together                 â”‚
â”‚ git blame  - Show what revision and author last modified each line of a file â”‚
â”‚ git worktree - Manage multiple working trees                                 â”‚
â”‚                                                                              â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[ XX ]â”€â”€â•¯
